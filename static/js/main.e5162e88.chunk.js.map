{"version":3,"sources":["assets/svg/loading-spinner.svg","util/cachingClient.js","redux/sagas/networkOps.js","redux/constants/actionTypes.js","redux/sagas/index.js","redux/reducer/loadingReducer.js","redux/store.js","containers/layouts/Header.jsx","containers/layouts/Footer.jsx","redux/actions/index.js","components/LoadingSpinner.jsx","containers/layouts/Layout.jsx","components/SuggestionBox.jsx","components/SaveForm.jsx","containers/layouts/PortfolioOverview.jsx","util/weightedPortfolio.js","containers/home/FundsForm.jsx","containers/Root.jsx","serviceWorker.js","index.js"],"names":["module","exports","AWS","config","update","region","process","accessKeyId","secretAccessKey","dynamoClient","DynamoDB","DocumentClient","dbClient","options","a","table","cache","method","params","TableName","Item","Key","Promise","resolve","reject","response","lscache","get","scan","promise","set","console","log","item","ReturnConsumedCapacity","put","err","data","stack","name","delete","GetFundsOp","GetBasketsOp","PutBasketOp","DeleteBasketOp","root","getBaskets","state","baskets","getBasketsToName","basketsToName","call","res","type","payload","areBasketsStale","localStorage","getItem","action","schemes","select","permanent","key","JSON","stringify","oldName","assert","all","takeLatest","fork","networkOps","initialState","funds","currentBasket","makeNamedState","mapped","Items","forEach","e","omit","computeBasketsToName","Object","keys","loadingReducer","setItem","assign","sagaMiddleware","createSagaMiddleware","store","createStore","compose","applyMiddleware","run","rootsaga","Header","className","Navbar","color","light","expand","brand","React","Component","Footer","this","props","map","Card","onClick","setCurrentBasket","Button","close","deleteBasket","connect","dispatch","LoadingSpinner","width","height","colorFirst","colorSecond","strokeWidth","radiusFirst","radiusSecond","xmlns","viewBox","preserveAspectRatio","cx","cy","ng-attr-r","ng-attr-stroke-width","ng-attr-stroke","ng-attr-stroke-dasharray","fill","strokeLinecap","r","stroke","strokeDasharray","transform","attributeName","calcMode","values","keyTimes","dur","begin","repeatCount","ng-attr-stroke-dashoffset","strokeDashoffset","Layout","loading","Fragment","children","SuggestionBox","rowRenderer","index","style","isScrolling","isVisible","classActive","classNames","activeItem","courser","setValue","inputProps","onMouseDown","stopPropagation","preventDefault","setState","searchString","list","showList","target","value","handleKeyDown","event","keyCode","countUp","Math","floor","length","countDown","searching","suggestionBoxData","searchedData","text","trim","toLowerCase","indexOf","push","onFocus","onBlur","search","nextProps","Input","onChange","onKeyDown","disableHeight","columnCount","rowCount","onSectionRendered","scrollToColumn","scrollToRow","rowHeight","scrollToIndex","defaultProps","displayName","SaveForm","disabled","handleChange","bind","handleSubmit","saveHandler","Form","InputGroup","id","placeholder","InputGroupAddon","addonType","PortfolioOverview","filterLaggards","portfolioList","filter","k","wt","_setRef","windowScroller","_windowScroller","_sort","sortBy","sortDirection","sortedList","_sortList","portfolio","isSortAscending","sort","b","result","rowsPrinted","updatePosition","ref","registerChild","onChildScroll","scrollTop","autoHeight","onScroll","headerHeight","overscanRowCount","rowGetter","label","dataKey","cellRenderer","cellData","toFixed","getBasketPortfolio","portfolioMap","totalWt","v","hasOwnProperty","f","c","stock","getRandomString","Date","getTime","toString","FundsForm","renderRows","formIndex","randomStringValue","scope","autoComplete","form","min","step","required","deleteRowFromForm","handleBasketToFormData","basketName","basketPortfolio","newIdexArr","includes","serverData","convertStateData","formData","covertedData","fundKey","weightKey","parseFloat","handleSubmitBtn","basket","handleChangeBasket","addRowToForm","newIndex","reduce","k1","k2","max","rowId","putBasket","updateLoading","prevProps","isEqual","onSubmit","Table","borderless","margin","src","loaderSvg","alt","namedBasket","Root","path","exact","component","to","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e5162e88.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading-spinner.c24dc86f.svg\";","import AWS from \"aws-sdk\";\nimport lscache from \"lscache\";\n\nAWS.config.update({\n  region: process.env.REACT_APP_REGION,\n  accessKeyId: process.env.REACT_APP_ACCESSKEYID,\n  secretAccessKey: process.env.REACT_APP_SECRETACCESSKEY,\n});\n\nconst LSCACHE_TIMEOUT = 1; // minutes\n\nlet dynamoClient = new AWS.DynamoDB.DocumentClient();\n\nconst dbClient = async (options) => {\n  // console.log(\"dbClient.options\", options);\n  const { table, cache, method } = options;\n  let params = {\n    TableName: table,\n    Item: {},\n    Key: {},\n  };\n  return new Promise(async (resolve, reject) => {\n    if (method === \"SCAN\") {\n      if (cache) {\n        const response = lscache.get(table);\n        if (response) {\n          return resolve(response);\n        }\n      }\n      try {\n        const response = await dynamoClient.scan(params).promise();\n        lscache.set(table, response, LSCACHE_TIMEOUT);\n        return resolve(response);\n      } catch (err) {\n        console.log(\"err\", err);\n        return reject(err);\n      }\n    } else if (method == \"PUT\") {\n      params.Item = options.item;\n      params.ReturnConsumedCapacity = \"TOTAL\";\n      // params.Key = {\n      //   name: options.item.name,\n      // };\n      dynamoClient.put(params, function (err, data) {\n        if (err) {\n          console.log(err, err.stack);\n          return reject(err);\n        } else {\n          return resolve(data);\n        }\n      });\n    } else if (method == \"DELETE\") {\n      params.Key = {\n        name: options.name,\n      };\n      dynamoClient.delete(params, function (err, data) {\n        if (err) {\n          console.log(err, err.stack);\n          return reject(err);\n        } else {\n          return resolve(data);\n        }\n      });\n    }\n  });\n  return null;\n};\n\nexport default dbClient;\n","import { all, call, put, takeLatest, select } from \"redux-saga/effects\";\nimport {\n  GET_FUNDS_SUCCESS,\n  GET_BASKETS,\n  GET_FUNDS,\n  PUT_BASKET,\n  DELETE_BASKET,\n  GET_BASKETS_SUCCESS,\n  PUT_BASKET_SUCCESS,\n  UPDATE_BASKET_SUCCESS,\n  DELETE_BASKET_SUCCESS,\n} from \"../constants/actionTypes\";\nimport get from \"lodash/get\";\nimport assert from \"assert\";\nimport dbClient from \"../../util/cachingClient\";\n\nexport const getBaskets = (state) => state.baskets;\nexport const getBasketsToName = (state) => state.basketsToName;\n\nexport function* GetFundsOp() {\n  // GET_FUNDS\n  const options = {\n    method: \"SCAN\",\n    table: \"funds\",\n    cache: true,\n  };\n  const res = yield call(dbClient, options);\n  yield put({\n    type: GET_FUNDS_SUCCESS,\n    payload: res,\n  });\n}\n\nexport function* GetBasketsOp() {\n  // GET_BASKETS\n  const areBasketsStale = localStorage.getItem(\"areBasketsStale\");\n\n  const options = {\n    method: \"SCAN\",\n    table: \"baskets\",\n    cache: areBasketsStale ? false : true,\n  };\n  const res = yield call(dbClient, options);\n  yield put({\n    type: GET_BASKETS_SUCCESS,\n    payload: res,\n  });\n}\n\nexport function* PutBasketOp(action) {\n  // PUT_BASKET\n  const { name, schemes } = action.payload;\n  const baskets = yield select(getBaskets); // <-- get the baskets\n  console.log(\"put\", baskets);\n  if (name in baskets) {\n    if (baskets[name].permanent) {\n      action.payload[\"name\"] = name + \" ( 1 )\";\n    }\n  }\n\n  const basketsToName = yield select(getBasketsToName);\n  const key = JSON.stringify(schemes);\n  // console.log(\"key\", key, \"basketsToName\", basketsToName, \"schemes\", schemes);\n  let options = {\n    table: \"baskets\",\n    item: action.payload,\n    cache: true,\n  };\n  if (key in basketsToName) {\n    const oldName = basketsToName[key];\n    if (!get(baskets[oldName], \"permanent\")) {\n      console.log(\"deleting the item by key\", oldName);\n      options.method = \"DELETE\";\n      options.name = oldName;\n      const res = yield call(dbClient, options);\n      console.log(\"res\", res);\n      yield put({\n        type: DELETE_BASKET_SUCCESS,\n        payload: oldName,\n      });\n    }\n  }\n  options.method = \"PUT\";\n  const res = yield call(dbClient, options);\n  console.log(\"res\", res);\n  yield put({\n    type: PUT_BASKET_SUCCESS,\n    payload: action.payload,\n  });\n}\n\nexport function* DeleteBasketOp(action) {\n  // DELETE_BASKET\n  const name = action.payload;\n  const baskets = yield select(getBaskets); // <-- get the baskets\n  assert(name in baskets);\n  if (baskets[name].permanent) {\n    return;\n  } else {\n    action[\"permanent\"] = false;\n  }\n  const options = {\n    method: \"DELETE\",\n    table: \"baskets\",\n    cache: true,\n    name: action.payload,\n  };\n  const res = yield call(dbClient, options);\n  yield put({\n    type: DELETE_BASKET_SUCCESS,\n    payload: action.payload,\n  });\n}\n\nexport default function* root() {\n  yield all([\n    takeLatest([GET_FUNDS], () => GetFundsOp()),\n    takeLatest([GET_BASKETS], () => GetBasketsOp()),\n    takeLatest([PUT_BASKET], (action) => PutBasketOp(action)),\n    takeLatest([DELETE_BASKET], (action) => DeleteBasketOp(action)),\n  ]);\n}\n","export const GET_FUNDS = \"GET_FUNDS\";\nexport const GET_FUNDS_SUCCESS = \"GET_FUNDS_SUCCESS\";\nexport const GET_BASKETS = \"GET_BASKETS\";\nexport const GET_BASKETS_SUCCESS = \"GET_BASKETS_SUCCESS\";\nexport const PUT_BASKET = \"PUT_BASKET\";\nexport const PUT_BASKET_SUCCESS = \"PUT_BASKET_SUCCESS\";\nexport const DELETE_BASKET = \"DELETE_BASKET\";\nexport const SET_CURRENT_BASKET = \"SET_CURRENT_BASKET\";\nexport const DELETE_BASKET_SUCCESS = \"DELETE_BASKET_SUCCESS\";\nexport const UPDATE_BASKET_SUCCESS = \"UPDATE_BASKET_SUCCESS\";\n","import { all, fork } from \"redux-saga/effects\";\n\n// import user from \"./user\";\nimport networkOps from \"./networkOps\";\n\nexport default function* root() {\n  yield all([fork(networkOps)]);\n}\n","import {\n  GET_FUNDS_SUCCESS,\n  GET_BASKETS_SUCCESS,\n  PUT_BASKET,\n  PUT_BASKET_SUCCESS,\n  DELETE_BASKET,\n  SET_CURRENT_BASKET,\n  DELETE_BASKET_SUCCESS,\n} from \"../constants/actionTypes\";\n\nimport omit from \"lodash/omit\";\n\nconst initialState = {\n  funds: {},\n  baskets: {},\n  currentBasket: \"\",\n  basketsToName: {},\n};\n\nconst makeNamedState = (table) => {\n  let mapped = {};\n  table.Items.forEach((e) => {\n    mapped[e.name] = omit(e, \"name\");\n  });\n  return mapped;\n};\n\nconst computeBasketsToName = (baskets) => {\n  let mapped = {};\n  Object.keys(baskets).forEach((e) => {\n    const { schemes } = baskets[e];\n    mapped[JSON.stringify(schemes)] = e;\n  });\n  return mapped;\n};\n\nconst loadingReducer = (state = initialState, action) => {\n  console.log(\"loadingReducer\", action);\n  switch (action.type) {\n    case GET_FUNDS_SUCCESS: {\n      return { ...state, funds: makeNamedState(action.payload) };\n    }\n    case GET_BASKETS_SUCCESS: {\n      const baskets = makeNamedState(action.payload);\n      localStorage.setItem(\"areBasketsStale\", \"false\");\n      return {\n        ...state,\n        baskets,\n        basketsToName: computeBasketsToName(baskets),\n      };\n    }\n    case PUT_BASKET_SUCCESS: {\n      const { name, schemes, permanent } = action.payload;\n      console.log(\"schemes\", schemes);\n      const key = JSON.stringify(schemes);\n      return Object.assign({}, state, {\n        baskets: { ...state.baskets, [name]: { schemes, permanent } },\n        basketsToName: {\n          ...state.basketsToName,\n          [key]: name,\n        },\n      });\n    }\n    case DELETE_BASKET_SUCCESS: {\n      const { schemes } = state.baskets[action.payload];\n      localStorage.setItem(\"areBasketsStale\", \"true\");\n      const key = JSON.stringify(schemes);\n      return Object.assign({}, state, {\n        baskets: omit(state.baskets, action.payload),\n        basketsToName: omit(state.basketsToName, key),\n      });\n    }\n    case SET_CURRENT_BASKET: {\n      return { ...state, currentBasket: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default loadingReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootsaga from \"./sagas\";\nimport loadingReducer from \"./reducer/loadingReducer\";\n// const store = createStore(rootReducer,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  loadingReducer,\n  compose(\n    applyMiddleware(sagaMiddleware)\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nsagaMiddleware.run(rootsaga);\nexport default store;\n","import React from \"react\";\n\nimport { Navbar } from \"reactstrap\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <Navbar color=\"faded\" light expand=\"md\" brand=\"logo\">\n          Home\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Card, CardBody, CardText, CardTitle } from \"reactstrap\";\n\nimport get from \"lodash/get\";\nimport { deleteBasketAction, setCurrentBasketAction } from \"redux/actions\";\n\nclass Footer extends React.Component {\n  render() {\n    const baskets = get(this.props, \"baskets\", {});\n    return (\n      <div className=\"Footer\">\n        {Object.keys(baskets).map((name) => {\n          const permanent = get(baskets[name], \"permanent\");\n          return (\n            <Card key={name} className=\"Footer_Card\">\n              <div\n                className=\"Footer_Card_Body\"\n                onClick={() => this.props.setCurrentBasket(name)}\n              >\n                {name}\n              </div>\n              {!permanent && (\n                <Button close onClick={() => this.props.deleteBasket(name)} />\n              )}\n            </Card>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    baskets: state.baskets,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteBasket: (name) => dispatch(deleteBasketAction(name)),\n    setCurrentBasket: (name) => dispatch(setCurrentBasketAction(name)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import {\n  GET_FUNDS,\n  PUT_BASKET,\n  DELETE_BASKET,\n  GET_BASKETS,\n  SET_CURRENT_BASKET,\n} from \"../constants/actionTypes\";\n\nexport const updateLoadingAction = () => ({\n  type: GET_FUNDS,\n});\n\nexport const getBasketsAction = () => ({\n  type: GET_BASKETS,\n});\n\nexport const putBasketAction = (payload) => ({\n  type: PUT_BASKET,\n  payload,\n});\n\nexport const deleteBasketAction = (payload) => ({\n  type: DELETE_BASKET,\n  payload,\n});\n\nexport const setCurrentBasketAction = (payload) => ({\n  type: SET_CURRENT_BASKET,\n  payload,\n});\n","import React from \"react\";\n\nexport const LoadingSpinner = props => {\n  const {\n    width = 150,\n    height = 150,\n    colorFirst = \"#1d3f72\",\n    colorSecond = \"#5699d2\",\n    strokeWidth = 4,\n    radiusFirst = 40,\n    radiusSecond = 35\n  } = props;\n  return (\n    <svg\n      width={width}\n      height={height}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 100\"\n      preserveAspectRatio=\"xMidYMid\"\n      className=\"lds-double-ring\"\n    >\n      <circle\n        cx={50}\n        cy={50}\n        ng-attr-r=\"{{config.radius}}\"\n        ng-attr-stroke-width=\"{{config.width}}\"\n        ng-attr-stroke=\"{{config.c1}}\"\n        ng-attr-stroke-dasharray=\"{{config.dasharray}}\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        r={radiusFirst}\n        strokeWidth={strokeWidth}\n        stroke={colorFirst}\n        strokeDasharray=\"62.83185307179586 62.83185307179586\"\n        transform=\"rotate(199.69 50 50)\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          calcMode=\"linear\"\n          values=\"0 50 50;360 50 50\"\n          keyTimes=\"0;1\"\n          dur=\"0.9s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n      <circle\n        cx={50}\n        cy={50}\n        ng-attr-r=\"{{config.radius2}}\"\n        ng-attr-stroke-width=\"{{config.width}}\"\n        ng-attr-stroke=\"{{config.c2}}\"\n        ng-attr-stroke-dasharray=\"{{config.dasharray2}}\"\n        ng-attr-stroke-dashoffset=\"{{config.dashoffset2}}\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        r={radiusSecond}\n        strokeWidth={strokeWidth}\n        stroke={colorSecond}\n        strokeDasharray=\"54.97787143782138 54.97787143782138\"\n        strokeDashoffset=\"54.97787143782138\"\n        transform=\"rotate(-199.69 50 50)\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          calcMode=\"linear\"\n          values=\"0 50 50;-360 50 50\"\n          keyTimes=\"0;1\"\n          dur=\"0.9s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n    </svg>\n  );\n};\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport LoadingSpinner from \"components/LoadingSpinner\";\n\nclass Layout extends Component {\n  render() {\n    const { loading } = this.props;\n    return (\n      <React.Fragment>\n        {loading && (\n          <div className=\"loading\">\n            <LoadingSpinner />\n          </div>\n        )}\n        <Header />\n        <div className=\"main-app\">{this.props.children}</div>\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nexport default connect(mapStateToProps)(Layout);\n","import React from \"react\";\nimport { Input } from \"reactstrap\";\nimport { ArrowKeyStepper, AutoSizer, List } from \"react-virtualized\";\nimport classNames from \"classnames\";\n\n// import type { Portal } from \"../../types/Portal\";\n\n// type Props = {\n//   portals: Array<Portal>,\n//   search?: string,\n//   onPortalSelected: (portal: Portal) => {},\n//   onCentralSelected: () => {}\n// };\nclass SuggestionBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n      courser: 0,\n      searchString: this.props.search ? this.props.search : \"\",\n      showList: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      list: [...this.props.suggestionBoxData],\n    });\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.suggestionBoxData.length !== nextProps.suggestionBoxData.length\n    ) {\n      this.setState({ list: [...nextProps.suggestionBoxData] });\n    }\n  }\n  rowRenderer = ({ key, index, isScrolling, isVisible, style }) => {\n    const classActive = classNames({\n      activeItem: this.state.courser === index,\n    });\n\n    const {\n      setValue,\n      inputProps: { name },\n    } = this.props;\n    return (\n      <li\n        key={key}\n        style={style}\n        className={`list-item ${classActive}`}\n        onMouseDown={(e) => {\n          e.stopPropagation();\n          e.preventDefault();\n          this.setState({\n            searchString: this.state.list[index],\n            showList: false,\n          });\n          setValue &&\n            setValue({ target: { name, value: this.state.list[index] } });\n        }}\n      >\n        {this.state.list[index]}\n      </li>\n    );\n  };\n\n  handleKeyDown = (event) => {\n    const { courser, list } = this.state;\n    const {\n      setValue,\n      inputProps: { name },\n    } = this.props;\n    // arrow up/down button should select next/previous list element\n    if (event.keyCode === 13) {\n      this.setState({\n        searchString: list[courser],\n        showList: false,\n      });\n      setValue && setValue({ target: { name, value: list[courser] } });\n    } else if (event.keyCode === 38 && courser > 0) {\n      const countUp = Math.floor(this.state.courser - 1);\n      this.setState({\n        courser: countUp,\n        searchString: list[countUp],\n        showList: true,\n      });\n      setValue && setValue({ target: { name, value: list[courser] } });\n    } else if (event.keyCode === 40 && courser < list.length - 1) {\n      const countDown = Math.floor(this.state.courser + 1);\n      this.setState({\n        courser: countDown,\n        searchString: list[countDown],\n        showList: true,\n      });\n      setValue && setValue({ target: { name, value: list[courser] } });\n    } else if (event.keyCode === 27) {\n      this.setState({\n        showList: false,\n      });\n    } else {\n      this.setState({ showList: true });\n    }\n  };\n\n  searching = (event) => {\n    const { setValue, suggestionBoxData } = this.props;\n    let searchedData = [];\n    const text = event.target.value.trim().toLowerCase();\n    if (text && text.length) {\n      suggestionBoxData.map((item, index) => {\n        if (item.toLowerCase().indexOf(text) !== -1) {\n          searchedData.push(item);\n        }\n        return void 0;\n      });\n    } else {\n      searchedData = [...suggestionBoxData];\n    }\n    this.setState({\n      list: searchedData,\n      searchString: event.target.value,\n    });\n    setValue && setValue(event);\n  };\n\n  onFocus = (event) => {\n    const { onFocus } = this.props.inputProps;\n    this.setState({ showList: true });\n    onFocus && onFocus(event);\n  };\n\n  onBlur = (event) => {\n    const { onBlur } = this.props.inputProps;\n    // if (!this.state.list.includes(this.state.searchString)) {\n    //   this.setState({ searchString: \"\" });\n    //   this.props.setValue && this.props.setValue({ target: { value: \"\" } });\n    // }\n    this.setState({ showList: false });\n    onBlur && onBlur(event);\n  };\n\n  render() {\n    const { inputProps } = this.props;\n    const { list } = this.state;\n    return (\n      <div className=\"SuggestionBox\">\n        <Input\n          {...inputProps}\n          onChange={this.searching}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          value={this.state.searchString}\n          onKeyDown={this.handleKeyDown}\n        />\n        {this.state.showList && (\n          <ul className=\"search-list marginPadding\">\n            <AutoSizer disableHeight>\n              {({ width }) => (\n                <ArrowKeyStepper columnCount={1} rowCount={list.length}>\n                  {({ onSectionRendered, scrollToColumn, scrollToRow }) => (\n                    <List\n                      width={width}\n                      height={list.length > 3 ? 4 * 56 : list.length * 56}\n                      className=\"virtualized-list marginPadding\"\n                      rowCount={this.state.list.length}\n                      rowHeight={56}\n                      rowRenderer={this.rowRenderer}\n                      columnCount={1}\n                      scrollToIndex={this.state.courser}\n                      searchString={this.state.searchString}\n                      scrollToColumn={scrollToColumn}\n                      scrollToRow={scrollToRow}\n                    />\n                  )}\n                </ArrowKeyStepper>\n              )}\n            </AutoSizer>\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\nSuggestionBox.defaultProps = {};\nSuggestionBox.displayName = \"SuggestionBox\";\n\nexport default SuggestionBox;\n","import React from \"react\";\nimport {\n  Button,\n  Form,\n  InputGroup,\n  Label,\n  Input,\n  InputGroupAddon,\n} from \"reactstrap\";\n\nclass SaveForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: \"\", disabled: true };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      disabled: event.target.value ? false : true,\n      name: event.target.value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.name) {\n      this.props.saveHandler(this.state.name);\n    }\n  }\n\n  render() {\n    return (\n      <Form>\n        <InputGroup className=\"SaveForm\">\n          <Input\n            type=\"text\"\n            name=\"Name\"\n            id=\"basketName\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder=\"basket name\"\n          />\n          <InputGroupAddon addonType=\"append\">\n            <Button\n              onClick={this.handleSubmit}\n              disabled={this.state.disabled}\n              color=\"primary\"\n            >\n              Save\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n      </Form>\n    );\n  }\n}\n\nexport default SaveForm;\n","import React, { Component } from \"react\";\n// import { Table, Button, Form, Input } from \"reactstrap\";\nimport {\n  AutoSizer,\n  Table as TableVirtualized,\n  Column,\n  WindowScroller,\n} from \"react-virtualized\";\n\nclass PortfolioOverview extends Component {\n  constructor(props) {\n    super(props);\n\n    const sortBy = \"totalHoldings\";\n    const sortDirection = \"ASC\";\n    const sortedList = this._sortList({\n      sortBy,\n      sortDirection,\n      portfolio: this.filterLaggards(props.portfolio),\n    });\n    this.state = {\n      sortedList,\n      sortBy,\n      sortDirection,\n    };\n  }\n\n  filterLaggards = (portfolioList) => {\n    return portfolioList.filter((k) => {\n      return k.wt > 0.005;\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const { sortBy, sortDirection } = this.state;\n    if (\n      this._windowScroller &&\n      this.props.rowsPrinted !== nextProps.rowsPrinted\n    ) {\n      this.setState({}, () => this._windowScroller.updatePosition());\n    }\n    if (nextProps.portfolio !== this.props.portfolio) {\n      this.setState(\n        {\n          sortedList: this._sortList({\n            sortBy,\n            sortDirection,\n            portfolio: this.filterLaggards(nextProps.portfolio),\n          }),\n        },\n        () => this._windowScroller && this._windowScroller.updatePosition()\n      );\n    }\n  }\n\n  _setRef = (windowScroller) => {\n    this._windowScroller = windowScroller;\n  };\n\n  _sort = ({ sortBy, sortDirection }) => {\n    const sortedList = this._sortList({\n      sortBy,\n      sortDirection,\n      portfolio: this.state.sortedList,\n    });\n    this.setState({ sortBy, sortDirection, sortedList });\n  };\n\n  _sortList = ({ sortBy, sortDirection, portfolio }) => {\n    const isSortAscending = sortDirection === \"ASC\";\n    return portfolio.sort((a, b) => {\n      let result = 0;\n      if (a[sortBy] < b[sortBy]) {\n        result = -1;\n      } else if (a[sortBy] > b[sortBy]) {\n        result = 1;\n      }\n\n      if (!isSortAscending) {\n        result *= -1;\n      }\n\n      return result;\n    });\n  };\n\n  render() {\n    const { sortedList } = this.state;\n    return (\n      <div className=\"PortfolioOverview\">\n        <div className=\"app-container\">\n          <WindowScroller ref={this._setRef}>\n            {({\n              height,\n              isScrolling,\n              registerChild,\n              onChildScroll,\n              scrollTop,\n            }) => (\n              <div className=\"WindowScroller\">\n                <AutoSizer disableHeight>\n                  {({ width }) => (\n                    <div ref={registerChild}>\n                      <TableVirtualized\n                        width={width}\n                        height={height}\n                        autoHeight\n                        isScrolling={isScrolling}\n                        onScroll={onChildScroll}\n                        scrollTop={scrollTop}\n                        headerHeight={50}\n                        rowHeight={40}\n                        rowCount={sortedList.length}\n                        overscanRowCount={4}\n                        sort={this._sort}\n                        sortBy={this.state.sortBy}\n                        sortDirection={this.state.sortDirection}\n                        rowGetter={({ index }) => sortedList[index]}\n                      >\n                        <Column label=\"Stock\" dataKey=\"stock\" width={400} />\n                        {/* <Column label=\"Sector\" dataKey=\"sector\" width={200} /> */}\n                        {/* <Column label=\"value(Cr)\" dataKey=\"value\" width={100} /> */}\n                        <Column\n                          label=\"weight\"\n                          dataKey=\"wt\"\n                          width={200}\n                          cellRenderer={(data) => {\n                            return (data.cellData * 100).toFixed(2) + \" %\";\n                          }}\n                        />\n                        {/* <Column\n                          label=\"Quantity\"\n                          dataKey=\"quantity\"\n                          width={100}\n                        /> */}\n                      </TableVirtualized>\n                    </div>\n                  )}\n                </AutoSizer>\n              </div>\n            )}\n          </WindowScroller>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PortfolioOverview;\n","export const getBasketPortfolio = (schemes = [], funds) => {\n  let portfolioMap = {};\n  let totalWt = 0;\n  schemes.map((v) => {\n    if (!funds.hasOwnProperty(v.name)) {\n      return;\n    }\n    const f = funds[v.name];\n    const wt = v.wt;\n    totalWt += wt;\n    f.portfolio.map((c) => {\n      if (!portfolioMap.hasOwnProperty(c.stock)) {\n        portfolioMap[c.stock] = 0;\n      }\n      portfolioMap[c.stock] += wt * c.wt;\n    });\n  });\n  let portfolio = [];\n  Object.keys(portfolioMap).forEach((key, index) => {\n    portfolio.push({ stock: key, wt: portfolioMap[key] / totalWt });\n  });\n  return portfolio;\n};\n","import React, { Component } from \"react\";\nimport { Table, Button, Form, Input } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  updateLoadingAction,\n  putBasketAction,\n  getBasketsAction,\n} from \"redux/actions\";\n\nimport SuggestionBox from \"components/SuggestionBox\";\nimport SaveForm from \"components/SaveForm\";\nimport PortfolioOverview from \"../layouts/PortfolioOverview\";\nimport loaderSvg from \"assets/svg/loading-spinner.svg\";\nimport { getBasketPortfolio } from \"util/weightedPortfolio\";\nimport get from \"lodash/get\";\nimport isEqual from \"lodash/isEqual\";\n\nconst getRandomString = () => new Date().getTime().toString(36);\n\nclass FundsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form: {},\n      serverData: [],\n      loading: false,\n      suggestionBoxData: [],\n      formIndex: [1],\n      randomStringValue: getRandomString(),\n    };\n    this.props.updateLoading();\n    this.props.getBaskets();\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps) {\n    const { currentBasket, funds } = this.props;\n    if (prevProps.currentBasket !== currentBasket) {\n      if (currentBasket) {\n        this.handleBasketToFormData(currentBasket);\n      }\n    }\n    if (!isEqual(prevProps.funds, funds)) {\n      this.setState({\n        suggestionBoxData: Object.keys(funds).map((k) => {\n          return k;\n        }),\n      });\n    }\n  }\n\n  renderRows = () => {\n    const { formIndex, randomStringValue } = this.state;\n    return formIndex.map((data, index) => (\n      <tr key={index + randomStringValue}>\n        <th scope=\"row\">{index + 1}</th>\n        <td className=\"WideTD\">\n          <SuggestionBox\n            // key={`fundName${data}` + this.state.form[`fundName${data}`]}\n            inputProps={{\n              type: \"text\",\n              name: `fundName${data}`,\n              id: \"fundName\",\n              placeholder: \"Fund name\",\n              autoComplete: \"off\",\n            }}\n            setValue={this.onChange}\n            search={this.state.form[`fundName${data}`]}\n            suggestionBoxData={this.state.suggestionBoxData}\n          />\n        </td>\n        <td>\n          <Input\n            type=\"number\"\n            // key={`weight${data}` + this.state.form[`weight${data}`]}\n            name={`weight${data}`}\n            id=\"weight\"\n            placeholder=\"wt > 0\"\n            min={0.001}\n            step={0.00001}\n            required\n            onChange={this.onChange}\n            value={this.state.form[`weight${data}`]}\n          />\n        </td>\n        <td>\n          {index > 0 && (\n            <Button\n              type=\"button\"\n              onClick={() => {\n                this.deleteRowFromForm(data);\n              }}\n            >\n              x\n            </Button>\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  onChange = (event) => {\n    this.setState({\n      form: { ...this.state.form, [event.target.name]: event.target.value },\n    });\n  };\n\n  handleBasketToFormData = (basketName) => {\n    const { baskets } = this.props;\n    const schemes = get(baskets[basketName], \"schemes\");\n    const form = {};\n    schemes.forEach((value, index) => {\n      form[`fundName${index + 1}`] = value[\"name\"];\n      form[`weight${index + 1}`] = value[\"wt\"].toString();\n    });\n    const basketPortfolio = getBasketPortfolio(schemes, this.props.funds);\n    const newIdexArr = [];\n    Object.keys(form).forEach((key) => {\n      if (key.includes(\"fund\")) {\n        newIdexArr.push(newIdexArr.length + 1);\n      }\n    });\n    this.setState({\n      serverData: basketPortfolio,\n      loading: false,\n      form,\n      formIndex: newIdexArr,\n      randomStringValue: getRandomString(),\n    });\n  };\n\n  convertStateData = (formIndex, formData) => {\n    const covertedData = [];\n    formIndex.forEach((key) => {\n      const fundKey = `fundName${key}`;\n      const weightKey = `weight${key}`;\n      covertedData.push({\n        name: formData[fundKey],\n        wt: formData[weightKey] ? parseFloat(formData[weightKey]) : 0.0,\n      });\n    });\n    return covertedData;\n  };\n\n  handleSubmitBtn = () => {\n    this.setState({ loading: true });\n\n    const basket = this.convertStateData(this.state.formIndex, this.state.form);\n    const basketPortfolio = getBasketPortfolio(basket, this.props.funds);\n    this.setState({\n      serverData: basketPortfolio,\n      loading: false,\n    });\n  };\n\n  handleChangeBasket = (schemes, form) => {};\n\n  addRowToForm = () => {\n    const { formIndex } = this.state;\n    const newIndex =\n      formIndex.reduce((k1, k2) => {\n        return Math.max(k1, k2);\n      }) + 1;\n    this.setState({\n      formIndex: [...this.state.formIndex, newIndex],\n      randomStringValue: getRandomString(),\n    });\n  };\n\n  deleteRowFromForm = (rowId) => {\n    const { formIndex } = this.state;\n    this.setState({\n      formIndex: formIndex.filter((item) => {\n        return item != rowId;\n      }),\n      randomStringValue: getRandomString(),\n    });\n  };\n\n  saveHandler = (name) => {\n    // const { basketsToName} = this.props\n    const basket = this.convertStateData(this.state.formIndex, this.state.form);\n    console.log(\"putBasket\", this.state);\n    this.props.putBasket({ name, schemes: basket, permanent: false });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"FundsForm\">\n          <div className=\"app-container\">\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                this.handleSubmitBtn();\n              }}\n            >\n              <Table borderless className=\"FundsForm__table\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Fund</th>\n                    {/* <th>Percentage</th> */}\n                    <th>Weight</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>{this.renderRows()}</tbody>\n              </Table>\n              <div className=\"FundsForm_FormControl\">\n                <Button color=\"secondary\" onClick={this.addRowToForm}>\n                  +\n                </Button>\n                <Button color=\"success\" type=\"submit\">\n                  Submit →\n                </Button>\n              </div>\n            </Form>\n          </div>\n        </div>\n        {this.state.loading ? (\n          <div style={{ height: 50, width: 50, margin: \"auto\" }}>\n            <img src={loaderSvg} alt=\"loader\" />\n          </div>\n        ) : (\n          void 0\n        )}\n        {this.state.serverData.length ? (\n          <div>\n            <SaveForm\n              saveHandler={this.saveHandler}\n              key={this.props.currentBasket}\n            />\n            <PortfolioOverview\n              portfolio={[...this.state.serverData]}\n              rowsPrinted={this.state.randomStringValue}\n            />\n          </div>\n        ) : (\n          void 0\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    funds: state.funds,\n    baskets: state.baskets,\n    currentBasket: state.currentBasket,\n    basketsToName: state.basketsToName,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateLoading: () => {\n      dispatch(updateLoadingAction());\n    },\n    getBaskets: () => {\n      dispatch(getBasketsAction());\n    },\n    putBasket: (namedBasket) => dispatch(putBasketAction(namedBasket)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FundsForm);\n","import React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\n\nimport Layout from \"./layouts/Layout\";\nimport FundsForm from \"./home/FundsForm\";\nimport PortfolioOverview from \"./layouts/PortfolioOverview\";\n\nclass Root extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact component={FundsForm} />\n          <Route path=\"/portfolio-overview\" component={PortfolioOverview} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-virtualized/styles.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport \"./assets/css/styles.scss\";\nimport \"./assets/css/styles-xs.scss\";\nimport Root from \"./containers/Root\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.REACT_APP_BASEURL}>\n      <Root />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}